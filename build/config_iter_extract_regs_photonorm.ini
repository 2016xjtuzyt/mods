[Computing]
numberOfCores=-1; how many cores to use. -1 for maximum possible
LoadColor=1;
[MSER] ;CMP implementation
max_area=0.05; maximum area of the MSER to the image area
min_size=30 ; minimum region size (in pixels)
min_margin=8; threshold
mode=FixedTh;RegNumber;can be "FixedTh", "FixedRegNumber", "RelativeTh", RelativeRegNumber 
;relativeThreshold=0.0001;
regionsNumber = 500;
;relativeRegionsNumber = 0.2;
doOnNormal=1
[HessianAffine];CMP implementation
mode=FixedTh;NotLessThanRegions; "FixedRegNumber", "RelativeTh", RelativeRegNumber, NotLessThanRegions 
threshold = 5.33333; = 16.0f/3.0f // noise dependent threshold on the response (sensitivity)
max_iter = 16; number of affine shape interations
patch_size = 41;  width and height of the patch
numberOfScales= 3; number of scale per octave
initialSigma = 1.6; amount of smoothing applied to the initial level of first octave
edgeEigenValueRatio = 10.0; ratio of the eigenvalues
border = 5; number of pixels ignored at the border of image
smmWindowSize = 19; // width and height of the SMM mask, pixels
convergenceThreshold=0.05; //for Baumberg iteration
doBaumberg=1
[ReadAffs]
fname=keys_temp.txt
[HarrisAffine];CMP implementation
mode=FixedTh;NotLessThanRegions;FixedRegNumber;can be "FixedTh", "FixedRegNumber", "RelativeTh", RelativeRegNumber 
threshold = 15.0; = 16.0f/3.0f // noise dependent threshold on the response (sensitivity)
relativeThreshold=0.1;
regionsNumber = 1000;
relativeRegionsNumber = 0.5;
max_iter = 16; number of affine shape interations
patch_size = 41;  width and height of the patch
numberOfScales= 3; number of scale per octave
initialSigma = 1.6; amount of smoothing applied to the initial level of first octave
edgeEigenValueRatio = 10.0; ratio of the eigenvalues
border = 5; number of pixels ignored at the border of image
smmWindowSize = 19; // width and height of the SMM mask, pixels
convergenceThreshold=0.1; //for Baumberg iteration
HarrisCoef = 0.04;
doOnNormal=1
doBaumberg=1
[DoG];CMP implementation
mode=FixedTh;RegNumber; can be "FixedTh", "FixedRegNumber", "RelativeTh", RelativeRegNumber 
threshold = 8.0; = 16.0f/3.0f // noise dependent threshold on the response (sensitivity)
relativeThreshold=0.01;
regionsNumber = 3000;
relativeRegionsNumber = 0.5;
numberOfScales = 3; number of scale per octave
initialSigma = 1.6; amount of smoothing applied to the initial level of first octave
edgeEigenValueRatio =10.0; ratio of the eigenvalues
border = 5; number of pixels ignored at the border of image
doOnNormal = 1;
doOnWLD =0;
max_iter = 32; number of affine shape interations
border = 5; number of pixels ignored at the border of image
convergenceThreshold=0.05; //for Baumberg iteration
smmWindowSize = 19; // width and height of the SMM mask, pixels
doBaumberg=0;
[CaffeDescriptor] ;Works only if compiled with WITH_CAFFE flag. Takes specified layer and treats is as descriptor
WeightsFile=/windows/caffe-models/weights/caffe_alexnet_model.caffemodel;/home/old-ufo/clear-caffe/models/bvlc_alexnet/bvlc_alexnet.caffemodel;
ProtoTxt=/windows/caffe-models/imagenet_val_protos/alexnet_desc.prototxt;/home/old-ufo/clear-caffe/models/bvlc_alexnet/deploy_desc.prototxt;
MeanB=114.45;104;
MeanG=114.45;117;
MeanR=114.45;123;
patchSize=91;  width and height of the patch
LayerName=pool2;inc1_concat
mrSize=3; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) 
Normalization=RootL2; Can be Power, L1, L2, RootL2
DoSIFTLikeOrientation=true
estimateOrientation=true
maxOrientations=2;
orientationThreshold=0.8
[SURF];OpenSURF implementation
octaves = 4;
intervals = 4;
init_sample=2;
thres =0.0004;
patchSize = 61;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
FastPatchExtraction=false
photoNorm=true
[FAST];OpenCV implementation
threshold=30;
nonmaxSuppression=true
type=2;
[ORB];OpenCV implementation
nfeatures = 500;
scaleFactor = 1.2;
nlevels = 8;
edgeThreshold = 1;
firstLevel = 0;
WTA_K=2;
patchSize=41;
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
FastPatchExtraction=false
photoNorm=true
[BRISK];OpenCV implementation is used, it looks like broken
thresh=50
octaves=1
patternScale=1.0
patchSize=41;
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
FastPatchExtraction=false
photoNorm=true
[BICE];Author`s implementation
dh=24; The resolution of the desciptor in the x direction (default: 24) (recommended values between 2-32.)
dv=8; The resolution of the desciptor in the y direction (default: 8) (recommended values between 2-32.)recommended between 2
do=12; The resolution of the desciptor for orientation 	(default: 12) (recommended values between 4-20.)
dl=2;The resolution of the desciptor for edge linear length, (default 2) (value must be 1 or 2.)
patchSize=41; The dimension of the patch (default = 32.) (recommended values 32, 64.)
mrScale =5.1962;The patch scale. This multiplied by the interest point scale gives the total patch footprint width in the source image. (default = 8.0)
[FREAK];OpenCV implementation == author`s
orientationNormalized=0;1
scaleNormalized=0;1
patternScale = 5.0;
nOctaves=4;
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[DAISY]
rad   = 20;
radq  =  3;
thq   =  8;
histq =  8;
nrm_type = 0; NRM_PARTIAL = 0, NRM_FULL = 1, NRM_SIFT = 2
FastPatchExtraction=false
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[SSIM]
patchSize = 41;
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
FastPatchExtraction = false;
window_size=5;
desc_rad=20;
nrad=5;
nang=12;
cor_size=40;
var_noise=300000;
saliency_thresh  = 1.0;  0.7;/*      Used for salient descriptor detection. If all bins in the
;non-normalised descriptor have a ssd value of this threshold
;or more when compared to the central patch, then the
;descriptor is marked as salient. A value of 1.0 disables
;salient descriptor detection. */
homogeneity_thresh = 1.0;0.7; /*      Used for homogeneous descriptor detection.
;If all bins in the non-normalised descriptor have a similarity
;(1-ssd) of this threshold or more when compared to the central
;patch, then the descriptor is marked as homogeneous. A value
;of 1.0 disables homogeneous descriptor detection. */
snn_thresh    =  1.0;    0.85; /*     Used for elimination of descriptors based upon a second-nearest
;neighbour constraint. For each descriptor, takes the
;two most similar matching descriptors from across the image,
;then eliminates those descriptors whose euclidean distance
;ratio to these two descriptors d1/d2 > snn_thresh (where d2 >
;d1). A value of 1.0 disables the second-nearest neighbour test.*/
photoNorm=true
[AKAZE]
FastPatchExtraction=false
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[DALI]
FastPatchExtraction=false
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[SMSLD]
FastPatchExtraction=false
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[DominantOrientation]
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for orientation estimation
patchSize = 41;  width and height of the patch
maxAngles = 1
;-1; [-1 for unlimited peaks number]
threshold = 0.8; fraction of max peak to add peak
addUpright=false;true;false
halfSIFTMode = false;
photoNorm=false
[SIFTDescriptor] ;CMP implementation
FastPatchExtraction=false
spatialBins = 4;  width and height bins 
orientationBins = 8;
maxBinValue = 0.2; 
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
numScales = 15
startCoef = 0.4
endCoef = 1.35;
[LIOPDescriptor];VLFeat implementation
FastPatchExtraction=false
patchSize = 41;  width and height of the patch
neighbours=4;
bins=6;
radius = 6;
threshold = 5.0;
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
photoNorm=true
[MROGHDescriptor] ;Author`s implementation
nDir = 8;
nOrder = 6;
nMultiRegion = 4;
photoNorm=true
patchSize = 41;  width and height of the patch
[PixelDescriptor] ;Author`s implementation
patchSize = 41;  width and height of the patch
mrSize = 5.19615243; = 3.0f*sqrt(3.0f). size of the measurement region (as multiple of the feature scale) for SIFT computation
FastPatchExtraction=false
normType=L2;Can be L2, None, LUCID
photoNorm=true
[Matching]; FLANN from OpenCV
binary_matcher=hierarchical; Can be linear, lsh, hierarchical.
vector_matcher=kdtree;kdtree;Can be linear, kdtree,composite, kmeans
binary_dist=Hamming; Can be Hamming
vector_dist=L2;Can be L1,L2
doBothRANSACgroundTruth = 1; only when used ground truth mode
RANSACforStopping = 1; only when used ground truth mode and doBothRANSACgroundTruth =1
useDBforFGINN=0
SIFTDBfile=RootSIFTDB.txt;
matchRatioRootSIFT = 0.8; ratio of distances threshold
matchRatioHalfSIFT = 0.8; ratio of distances threshold
matchRatioHalfRootSIFT = 0.8; ratio of distances threshold
matchRatioInvSIFT = 0.8; ratio of distances threshold
matchRatioSIFT = 0.8; ratio of distances threshold
matchRatioSURF = 0.8; ratio of distances threshold
matchRatioLIOP = 0.8; ratio of distances threshold
matchRatioMROGH = 0.8; ratio of distances threshold
matchDistanceORB = 50; 
matchDistanceBRISK = 90; 
matchDistanceFREAK = 70; 
matchDistanceBRIEF = 70;
contradDist = 10.0;10.0; in pixels
checkFwithPTS = 0
kd_trees=4;
knn_checks=128;
doCLAHE=0;
[DuplicateFiltering]
doBeforeRANSAC = 1	;if == 0, tend to degenerated cases faster but a bit less true mathces
duplicateDist = 3.0	;in pixels
whichCorrespondenceRemains=bestFGINN;can random, bestFGINN, bestDistance, biggerRegion
[SCV]; CMP implementation
useSCV = 0;
[RANSAC] ;CMP implementation
err_threshold = 2.0;in pixels.
ErrorType=Sampson; Can be Sampson,SymmSum.
doSymmCheck = 1;
confidence = 0.99
max_samples = 200000
localOptimization = 1
LAFcoef=3.0; LAFcoef*err_threshold = threshold for LAF-F-check. Use 0 to switch check off 
HLAFcoef=0;14.0; LAFcoef*err_threshold = threshold for Symmetrical LAF-H-check. Use 0 to switch check off 
;Symmetrical error >= 2* Sampson error, also LAF can be not precisely equal. 12 is recommended
[ImageOutput]
writeImages = 1
drawOnlyCenters = 0; if 0, all matches ellipses with orientations will be shown. 
drawEpipolarLines = 0; in F-mode only. 
drawReprojected = 0;0 == ASIFT-like output
[TextOutput]
verbose=1;
timeLog= 1;
featureComplemetaryLog = 0;
writeKeypoints = 1;
writeMatches = 0;
outputAllTentatives=0;
outputEstimatedHorF=1;
[OverlapMatching]
doOverlapMatch = 0; only when used ground truth mode. Test purposes only
matchOrientedLAFs = 1;
overlapError = 0.04; Used in correspondence densification with homography.
; Overlap error according to 
;A. Vedaldi and H. Ling and S. Soatto 
;Knowing a Good Feature When You See It: 
;Ground Truth and Methodology to Evaluate Local Features for Recognition
;in Computer Vision: Detection, Recognition and Reconstruction, 2010
;Output
